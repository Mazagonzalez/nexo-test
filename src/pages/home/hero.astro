---
type Product = {
  id: number;
  name: string;
  description: string;
  price: number;
  category: string;
};

const colorCategory = {
  "Categoria 1": "bg-blue-500 text-white",
  "Categoria 2": "bg-yellow-500 text-black",
};

const getCategoryStyle = (category: string) =>
  colorCategory[category as keyof typeof colorCategory] || "bg-gray-200 text-black";

let data: Product[] = [];

try {
  const response = await fetch('https://vibra.icu/api/v1/products');
  if (!response.ok) throw new Error('Error al obtener los productos');
  data = await response.json();
} catch (error) {
  console.error('Error al cargar productos:', error);
}
---

<section class="h-screen flex flex-col gap-10 items-center justify-center text-center">
  <div class="max-w-2xl px-4">
    <h1 class="text-4xl md:text-6xl font-bold mb-4">Nexo</h1>
    <p class="text-lg md:text-xl mb-8">
      A modern, open-source, and customizable Astro theme.
    </p>
    <a
      href="/docs"
      class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded transition duration-300"
    >
      Get Started
    </a>
  </div>

  <div class="flex gap-4 flex-wrap justify-center">
    {data.map((item) => (
      <div class="w-[200px] hover:scale-[1.1] bg-white text-black text-start rounded-2xl p-4 cursor-pointer transition-transform duration-300 relative">
        <span class={`absolute px-1.5 py-px text-xs font-light top-6 right-6 rounded-full z-10 ${getCategoryStyle(item.category)}`}>
            {item.category}
        </span>

        <div class="w-full h-32 rounded-xl bg-gray-300 animate-pulse"></div>
        <h3 class="text-xl font-semibold mt-3">{item.name}</h3>
        <p class="text-gray-700 text-sm leading-[18px]">{item.description}</p>
        <h2 class="text-3xl font-bold text-end mt-5">$ {item.price}</h2>
      </div>
    ))}
  </div>
</section>
